{"version":3,"file":"evrythng.es.polyfill.js","sources":["../src/settings.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isPlainObject.js","../src/setup.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/isFunction.js","../src/util/buildParams.js","../src/util/buildUrl.js","../src/api.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/isString.js","../src/symbols.js","../src/scope/Scope.js","../src/util/parseLinkHeader.js","../src/resource/Resource.js","../src/entity/Entity.js","../src/entity/Property.js","../src/util/getCurrentPosition.js","../node_modules/lodash-es/isUndefined.js","../src/entity/Action.js","../src/util/mixin.js","../src/entity/Product.js","../src/entity/Location.js","../src/entity/Thng.js","../src/entity/Collection.js","../src/entity/ActionType.js","../src/entity/Status.js","../src/entity/ReactorScript.js","../src/entity/ReactorSchedule.js","../src/entity/ReactorLog.js","../src/entity/Application.js","../src/entity/Project.js","../src/entity/Permission.js","../src/entity/Role.js","../src/entity/User.js","../src/entity/Task.js","../src/entity/Batch.js","../src/entity/Place.js","../src/entity/File.js","../src/scope/Operator.js","../src/scope/User.js","../src/entity/UserAccess.js","../src/scope/Application.js","../src/scope/TrustedApplication.js","../src/scope/Device.js","../src/entities.js","../src/evrythng.js"],"sourcesContent":["/**\n * An interceptor implements a request and/or response handlers that are called\n * before and after each request, respectively.\n *\n * @typedef {Object} Interceptor\n * @param {Function} request - Function to run before the request is sent\n * @param {Function} response - Function to run after the response is received\n */\n\n/**\n * Settings can be applied globally or for individual requests.\n * Available options are provided below:\n *\n * @typedef {Object} Settings\n * @param {string} apiUrl - API url of request\n * @param {string} url - Url relative to `apiUrl`\n * @param {string} method - HTTP Method of request\n * @param {string} apiKey - API Key to use with request\n * @param {boolean} fullResponse - Flags if request should remain unwrapped\n * @param {boolean} geolocation - Flags if action creation should use the Web\n * Geolocation API\n * @param {number} timeout - Timeout for request\n * @param {Object} headers - Headers to send with request\n * @param {Interceptor[]} interceptors - List of request/response interceptors\n */\n\n/**\n * Default settings. Never change.\n *\n * @type {Settings}\n */\nconst defaultSettings = {\n  apiUrl: 'https://api.evrythng.com',\n  apiKey: '',\n  fullResponse: false,\n  geolocation: true,\n  timeout: 0,\n  headers: {\n    'content-type': 'application/json'\n  },\n  interceptors: []\n}\n\n// Initialize settings with defaults.\nconst settings = Object.assign({}, defaultSettings)\n\nexport default settings\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import isPlainObject from 'lodash-es/isPlainObject'\nimport settings from './settings'\n\n/**\n * Override global settings. Ignore unknown settings.\n *\n * @param {Object} customSettings - Custom settings\n * @returns {Object} new\n */\nexport default function setup (customSettings) {\n  if (!isPlainObject(customSettings)) {\n    throw new TypeError('Setup should be called with an options object.')\n  }\n\n  // Update and return new settings.\n  return Object.assign(settings, customSettings)\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import isPlainObject from 'lodash-es/isPlainObject'\n\nconst SPECIALS = ['&', '|', '!', '>', '<', '=', '~', '(', ')', ',']\nconst SPECIALS_REGEXP = new RegExp(`[${SPECIALS.join('\\\\')}]`, 'g')\nconst SPECIALS_ESCAPE = '\\\\$&'\n\n/**\n * Build url safe parameter string if an object provided.\n *\n * @export\n * @param {(Object | string)} [params] key-value object or final query string\n * @param {boolean} [useEncoding] whether to skip encoding\n * @returns {string}\n */\nexport default function buildParams (params = {}, useEncoding = true) {\n  return isPlainObject(params)\n    ? Object.entries(params).map(buildParam(useEncoding)).join('&')\n    : params\n}\n\n/**\n * Returns reducer function that adds the encoded key-value params to\n * accumulator.\n *\n * @param {boolean} useEncoding\n * @returns {Function}\n */\nfunction buildParam (useEncoding) {\n  const encode = uriEncoder(useEncoding)\n  return ([key, value]) => {\n    return `${encode(key)}=${encode(buildParams(value))}`\n  }\n}\n\n/**\n * Returns function that encodes values using encodeURIComponent.\n *\n * @param {boolean} useEncoding\n * @returns {Function}\n */\nfunction uriEncoder (useEncoding) {\n  return (value) => useEncoding\n    ? encodeURIComponent(value)\n    : escapeSpecials(value)\n}\n\n/**\n * Escape special characters in value with the backslash (\\) character.\n *\n * @param {string} value\n * @returns {string}\n */\nfunction escapeSpecials (value) {\n  return value.replace(SPECIALS_REGEXP, SPECIALS_ESCAPE)\n}\n","import buildParams from './buildParams'\n\n/**\n * Concatenate url with parameters from request options.\n *\n * @export\n * @param {Object} options request options including url and params\n * @returns {string}\n */\nexport default function buildUrl (options) {\n  let url = `${options.apiUrl}${options.url}`\n\n  if (options.params) {\n    url += `?${buildParams(options.params)}`\n  }\n\n  return url\n}\n","import isFunction from 'lodash-es/isFunction'\nimport settings from './settings'\nimport buildUrl from './util/buildUrl'\n\n/**\n * Make API request to provided API Url. Custom user options are merged with\n * the globally defined settings and request defaults. Request interceptors can\n * manipulated this options before passing them on to Fetch. On response,\n * response interceptors may parse the result.\n *\n * This method returns both a Promise and accepts error first callbacks.\n *\n * @param {Settings} customOptions - User options for this single request\n * @param {function} callback - Error first callback\n * @returns {Promise} - Response promise\n */\nexport default function api (customOptions = {}, callback) {\n  let initialOptions = mergeInitialOptions(customOptions)\n\n  return applyRequestInterceptors(initialOptions)\n    .then(options => {\n      return makeFetch(options)\n        .then(handleResponse(options))\n        .then(applyResponseInterceptors(options))\n    })\n    .then(success(callback))\n    .catch(failure(callback))\n}\n\n/**\n * Merge base options, global settings, one-off request options and nested\n * headers object. Use apiKey option if headers.authorization is not provided.\n *\n * @param {Settings} customOptions - User options\n * @returns {Settings} - Merged options for fetch\n */\nfunction mergeInitialOptions (customOptions) {\n  const options = Object.assign(\n    { method: 'get', url: '' },\n    settings,\n    customOptions,\n    { headers: Object.assign({}, settings.headers, customOptions.headers) }\n  )\n\n  // Use apiKey if authorization header is not explicitly provided.\n  if (!options.headers.authorization && options.apiKey) {\n    options.headers.authorization = options.apiKey\n  }\n\n  // Stringify data if any\n  if (options.data) {\n    options.body = JSON.stringify(options.data)\n    Reflect.deleteProperty(options, 'data')\n  }\n\n  return options\n}\n\n/**\n * Apply request inteceptors functions in sequence, chaining each promise.\n *\n * @param {Settings} options - Request options\n * @returns {Promise} - Promise to updated request options\n */\nfunction applyRequestInterceptors (options) {\n  // Use closure to keep track if request as been cancelled in interceptors\n  let cancelled = false\n  function cancel () {\n    cancelled = true\n  }\n\n  let intercepted = Promise.resolve(options)\n\n  if (Array.isArray(options.interceptors)) {\n    options.interceptors\n      .filter(interceptor => isFunction(interceptor.request))\n      .forEach(interceptor => {\n        // Chain promises. If interceptor returns undefined, use previous options\n        intercepted = intercepted.then(prevOptions => {\n          if (cancelled) return prevOptions\n          return interceptor.request(prevOptions, cancel) || prevOptions\n        })\n      })\n  }\n\n  return intercepted.then(finalOptions => {\n    // Reject request if it has been cancelled by request interceptors.\n    if (cancelled) {\n      return Promise.reject({\n        errors: ['Request cancelled on request interceptors'],\n        cancelled: true\n      })\n    }\n    return finalOptions\n  })\n}\n\n/**\n * Make the actual fetch request using the Fetch API (browser and Node.js).\n * Mimic timeout with Promise.race, rejecting request if timeout happens before\n * response arrives.\n * Note: timeout should be added to fetch spec:\n * https://github.com/whatwg/fetch/issues/20\n *\n * @param {Settings} options - Request options\n */\nfunction makeFetch (options) {\n  const req = fetch(buildUrl(options), options)\n  if (!options.timeout) {\n    return req\n  } else {\n    return Promise.race([\n      req,\n      new Promise(function (resolve, reject) {\n        setTimeout(() => reject('Request timeout'), options.timeout)\n      })\n    ])\n  }\n}\n\n/**\n * Return initial response data depending on the options.fullResponse value.\n * Always resolve request on HTTP success code, reject otherwise. Return the\n * entire Response object in case of fullResponse option, default to JSON\n * parsing otherwise.\n *\n * @param {Settings} options - Request options\n * @returns {Promise} - Promise to {Response} or {Object}\n */\nfunction handleResponse (options) {\n  return response => {\n    const res = options.fullResponse\n      ? Promise.resolve(response)\n      : response.status === 204\n      ? Promise.resolve()\n      : response.json()\n\n    return res.then(data => {\n      if (response.ok) {\n        return data\n      } else {\n        throw data\n      }\n    })\n  }\n}\n\n/**\n * Apply response interceptors functions. When using fullResponse, response is\n * a Response object with a ReadableStream. Until transform streams arrive in\n * browser, there's no way to elegantly transform a response body, other than\n * monkey-patching .json method.\n *\n * @param {Settings} options - Request options\n * @returns {function} - Response handler function\n */\nfunction applyResponseInterceptors (options) {\n  return response => {\n    let intercepted = Promise.resolve(response)\n\n    if (Array.isArray(options.interceptors)) {\n      options.interceptors\n        .filter(interceptor => isFunction(interceptor.response))\n        .forEach(interceptor => {\n          // Chain promises.\n          intercepted = intercepted.then(interceptor.response)\n        })\n    }\n\n    return intercepted\n  }\n}\n\n/**\n * Apply error-first callback if available.\n *\n * @param {function} callback - Error-first callback\n * @returns {function} - Response handler function\n */\nexport function success (callback) {\n  return response => {\n    if (callback) callback(null, response)\n    return response\n  }\n}\n\n/**\n * Apply error-first callback with error if available.\n *\n * @param {function} callback - Error-first callback\n * @returns {function} - Response handler function\n */\nexport function failure (callback) {\n  return err => {\n    if (callback) callback(err)\n    throw err\n  }\n}\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","export default {\n  init: Symbol('init'),\n  path: Symbol('path'),\n  resource: Symbol('resource')\n}\n","import isString from 'lodash-es/isString'\nimport api from '../api'\nimport symbols from '../symbols'\n\n/**\n * Scope defines the context in which API calls are made. A scope is defined\n * by its API Key. That key is sent in each request's Authorization header that\n * uses this scope.\n */\nexport default class Scope {\n  /**\n   * Creates an instance of Scope.\n   *\n   * @param {string} apiKey API Key of scope\n   * @param {Object} [body={}] Optional scope data\n   */\n  constructor (apiKey, body = {}) {\n    if (!isString(apiKey)) {\n      throw new Error('Scope constructor should be called with an API Key')\n    }\n\n    this.apiKey = apiKey\n\n    // Define non-enumerable unique init property so it's not copied over in\n    // shallow copies of this (e.g. using Object.assign).\n    this[symbols.init] = api({\n      url: '/access',\n      apiKey: this.apiKey\n    })\n\n    // Extend scope with any given details.\n    Object.assign(this, body)\n  }\n\n  /**\n   * Read itself and extend scope document.\n   *\n   * @param {Settings} [options={}] - Optional API request options\n   * @returns {Promise} - Updated operator scope\n   */\n  read (options = {}) {\n    const opts = Object.assign(options, {\n      method: 'get',\n      url: this[symbols.path],\n      apiKey: this.apiKey\n    })\n\n    return this._request(opts)\n  }\n\n  /**\n   * Update self and extend scope document.\n   *\n   * @param {Object} data - Operator data\n   * @param {Settings} [options={}] - Optional API request options\n   * @returns {Promise} - Updated operator scope\n   */\n  update (data, options = {}) {\n    const opts = Object.assign(options, {\n      method: 'put',\n      url: this[symbols.path],\n      apiKey: this.apiKey,\n      data\n    })\n\n    return this._request(opts)\n  }\n\n  // Private\n\n  /**\n   *\n   * @param {Settings} options - Request options\n   * @returns {Promise} - Updated operator scope\n   * @private\n   */\n  _request (options) {\n    return api(options).then(data => Object.assign(this, data))\n  }\n}\n","// Parse Link headers for API pagination.\n// https://gist.github.com/niallo/3109252\nexport default function parseLinkHeader (header) {\n  const links = {}\n\n  if (header && header.length) {\n    // Split parts by comma\n    const parts = header.split(',')\n    // Parse each part into a named link\n    for (let i = 0; i < parts.length; i++) {\n      const section = parts[i].split(';')\n      const url = section[0].replace(/<(.*)>/, '$1').trim()\n      const name = section[1].replace(/rel=\"(.*)\"/, '$1').trim()\n      links[name] = url\n    }\n  }\n\n  return links\n}\n","import isString from 'lodash-es/isString'\nimport isFunction from 'lodash-es/isFunction'\nimport Scope from '../scope/Scope'\nimport Entity from '../entity/Entity'\nimport api, { success, failure } from '../api'\nimport symbols from '../symbols'\nimport parseLinkHeader from '../util/parseLinkHeader'\n\n/**\n * A Resource is the base class that implements the CRUD methods behavior.\n * All resource requests are scoped (i.e. they use the scope's API Key).\n *\n * Every resource operation tries to serialize/deserialize the type of object\n * corresponding to the resource (i.e. when creating a Thng, the developer gets\n * a Thng entity back, with nested methods).\n */\nexport default class Resource {\n  /**\n   * Returns a resource factory function for the given entity type.\n   *\n   * @static\n   * @param {Entity} type - Entity sub-class\n   * @param {string} path - Path for new resource\n   * @param {Function} MixinNestedResources - Mixin that extends Resource class\n   * with nested resources\n   * @return {Function} - Resource factory function\n   */\n  static factoryFor (type, path = '', MixinNestedResources) {\n    if (!type) {\n      throw new Error('Entity type is necessary for resource factory.')\n    }\n\n    // No \"this\" binding with arrow function! This needs to run in the context\n    // where it is mixed in / attached.\n    return function (id) {\n      // Allowed on Scopes, Resources and Entities.\n      let parentPath, parentScope, newPath\n\n      if (this instanceof Scope) {\n        parentScope = this\n        parentPath = ''\n      } else if (this instanceof Resource) {\n        parentScope = this.scope\n        parentPath = this.path\n      } else if (this instanceof Entity) {\n        parentScope = this[symbols.resource].scope\n        parentPath = this[symbols.resource].path\n      }\n\n      newPath = parentPath + path\n\n      if (id) {\n        if (!isString(id)) {\n          throw new TypeError('ID must be a string.')\n        }\n        newPath += `/${encodeURIComponent(id)}`\n      }\n\n      const XResource = MixinNestedResources\n        ? MixinNestedResources(Resource)\n        : Resource\n      return new XResource(parentScope, newPath, type)\n    }\n  }\n\n  /**\n   * A Resource requires a Scope sub-class (App, Operator, etc.) and the\n   * corresponding path in the Engine API. An Entity sub-class can be\n   * provided, in which case is it used to create instance of that Entity class\n   * when returning from API requests.\n   *\n   * @param {Scope} scope - Scope containing API Key\n   * @param {string} path - Relative path to API resource\n   * @param {Entity} [type] - Reference to Entity class (constructor)\n   */\n  constructor (scope, path, type) {\n    if (!(scope && scope instanceof Scope)) {\n      throw new TypeError('Scope should inherit from Scope (e.g. EVT.App).')\n    }\n\n    if (!isString(path)) {\n      throw new TypeError('Resource must have a String path.')\n    }\n\n    // Setup scope for each of the subsequent calls.\n    this.scope = scope\n\n    // Setup path and allow to omit leading '/'.\n    this.path = `${path[0] !== '/' ? '/' : ''}${path}`\n\n    // Setup entity for serializing and deserializing results. It must\n    // implement *toJSON()* method, as defined in the Entity base class.\n    if (type && (type === Entity || type.prototype instanceof Entity)) {\n      this.type = type\n    }\n  }\n\n  /**\n   * Convert an Entity instance into plain JSON payload for API requests.\n   *\n   * @param {Entity} entity - Instace of entity object\n   * @returns {Object}\n   */\n  serialize (entity = {}) {\n    if (!(this.type && entity instanceof this.type)) {\n      return entity\n    }\n    return entity.json()\n  }\n\n  /**\n   * Opposite of serialization. Convert API responses into proper Entities\n   * using the entity class of the resource. If response is a collection,\n   * converts each of the items.\n   *\n   * @param {Object} response - JSON response from API\n   * @returns {Object|Entity|Response} - Entity if able to deserialize;\n   * Response if fullResponse option was used; Object otherwise.\n   */\n  deserialize (response) {\n    if (response && this.type) {\n      if (Array.isArray(response)) {\n        return response.map(this.deserialize.bind(this))\n      }\n\n      if (response.body) {\n        // Full response, add deserialize method to deserialize the Response's\n        // json body\n        response.deserialize = () => response.json()\n          .then(this.deserialize.bind(this))\n      } else {\n        // JSON response, base case.\n        // Create new entity with updated resource derived from current.\n        let newPath = this.path\n\n        // Expand resource path with ID of entity.\n        if (response.id && newPath.indexOf(response.id) === -1) {\n          newPath += `/${response.id}`\n        }\n\n        const newResource = new Resource(this.scope, newPath, this.type)\n        const EntityType = this.type\n        return new EntityType(newResource, response)\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * Create a new entity for this resource.\n   *\n   * @param {Object|Entity} body - Entity to create\n   * @param {Settings} [options] - Options of the request\n   * @param {Function} [callback] - Error-first callback\n   * @returns {Promise}\n   */\n  create (body, options, callback) {\n    if (!body || isFunction(body)) {\n      throw new TypeError('Create method must have payload.')\n    }\n\n    return this._request({\n      url: this.path,\n      body,\n      method: 'post'\n    }, options, callback)\n  }\n\n  /**\n   * Reads resource entities.\n   *\n   * @param {Settings} [options] - Options of the request\n   * @param {Function} [callback] - Error-first callback\n   * @returns {Promise}\n   */\n  read (options, callback) {\n    return this._request({\n      url: this.path,\n      method: 'get'\n    }, options, callback)\n  }\n\n  /**\n   * Updates entity via this resource.\n   *\n   * @param {Object|Entity} body - Entity to create\n   * @param {Settings} [options] - Options of the request\n   * @param {Function} [callback] - Error-first callback\n   * @returns {Promise}\n   */\n  update (body, options, callback) {\n    if (!body || isFunction(body)) {\n      throw new TypeError('Update method must have payload.')\n    }\n\n    return this._request({\n      url: this.path,\n      body,\n      method: 'put'\n    }, options, callback)\n  }\n\n  /**\n   * Deletes entity in resource.\n   *\n   * @param {Settings} [options] - Options of the request\n   * @param {Function} [callback] - Error-first callback\n   * @returns {Promise}\n   */\n  ['delete'] (options, callback) {\n    return this._request({\n      url: this.path,\n      method: 'delete'\n    }, options, callback)\n  }\n\n  /**\n   * Returns a page iterator. It is essentially an async generator that returns\n   * a promise to the next page on every `.next()` invocation.\n   *\n   * @param {Settings} [options] - Options of the request\n   * @returns {AsyncGenerator}\n   * @example\n   *\n   * ```\n   *   const it = operator.thng().pages()\n   *   it.next().then(console.log)\n   *\n   *   // or in ES7+\n   *\n   *   for await (let page of pages) {\n   *     console.log(page)\n   *   }\n   * ```\n   */\n  async *pages (options = {}) {\n    const fullResponse = options.fullResponse\n    let response\n\n    // Read first 'page' with user-defined options.\n    response = await this._linkRequest({url: this.path}, fullResponse, options)\n    yield response.result\n\n    while (response.next) {\n      response = await this._linkRequest({apiUrl: response.next}, fullResponse)\n      yield response.result\n    }\n  }\n\n  // PRIVATE\n\n  /**\n   * Actual request call. This method merges mandatory request options with\n   * user provided ones and forces the resource path and API Key, so they are\n   * not overriden. Serializes any body passed in, and deserializes response in\n   * the end.\n   *\n   * Callback may be used in place of userOptions.\n   *\n   * @param {Settings} requestOptions - Mandatory request options\n   * @param {Settings} [userOptions] - Optional user options\n   * @param {Function} [callback] - Error-first callback\n   * @returns {Promise.<Object|Entity|Response>}\n   * @private\n   */\n  async _request (requestOptions, userOptions = {}, callback) {\n    if (isFunction(userOptions)) {\n      callback = userOptions\n    }\n\n    // Merge options, priority to mandatory ones.\n    const options = Object.assign(\n      {},\n      userOptions,\n      requestOptions,\n      {\n        apiKey: this.scope.apiKey\n      }\n    )\n\n    // Serialize Entity into JSON payload.\n    if (options.body) {\n      options.body = await this.serialize(options.body)\n    }\n\n    // Execute callback after deserialization.\n    try {\n      const response = await api(options)\n      const deserialized = await this.deserialize(response)\n      return success(callback)(deserialized)\n    } catch (err) {\n      throw failure(callback)(err)\n    }\n  }\n\n  /**\n   * Async request that parses the link header if any.\n   *\n   * @param {Settings} requestOptions - Mandatory request options\n   * @param {Boolean} fullResponse - Wrap Response or not\n   * @param {Settings} [userOptions] - Optional user options\n   * @returns {Promise.<{result: Response|Array, next: string}>}\n   * @private\n   */\n  async _linkRequest (requestOptions, fullResponse, userOptions = {}) {\n    const opts = Object.assign({ fullResponse: true }, requestOptions)\n    const response = await this._request(opts, userOptions)\n    const linkHeader = parseLinkHeader(response.headers.get('link'))\n    const next = linkHeader.next && decodeURIComponent(linkHeader.next)\n    const result = await (fullResponse ? response : response.json())\n    return { result, next }\n  }\n}\n","import Resource from '../resource/Resource'\nimport symbols from '../symbols'\n\n/**\n * Entity is the base class for all types of entities in the EVRYTHNG API.\n * An Entity knows how to update and delete itself given that a resource is\n * provided.\n */\nexport default class Entity {\n  /**\n   * Creates an new entity of given Resource. Optionally can be initialized\n   * with pre-defined data.\n   *\n   * @param {Resource} resource - Resource owner of this entity.\n   * @param {Object} [body] Optional entity data\n   */\n  constructor (resource, body = {}) {\n    if (!(resource && resource instanceof Resource)) {\n      throw new Error('Resource must be a Resource.')\n    }\n\n    // Define non-enumerable unique resource property so it's not copied over\n    // in shallow copies of this (e.g. using Object.assign).\n    this[symbols.resource] = resource\n\n    // Extend Entity with data.\n    Object.assign(this, body)\n  }\n\n  /**\n   * Returns all enumerable properties.\n   *\n   * @returns {Object}\n   */\n  json () {\n    return Object.entries(this)\n      .reduce((ret, [k, v]) => Object.assign(ret, {[k]: v}), {})\n  }\n\n  /**\n   * Update itself by calling the update method of the owning resource and\n   * passing the JSON representation of itself or the given body object.\n   *\n   * @param {Object} body - optional body, use self as default\n   * @param {Function} callback - error-first callback\n   * @returns {Promise.<Object>}\n   */\n  update (body = this.json(), callback) {\n    return this[symbols.resource].update(body, callback)\n      .then(updated => {\n        // Update self and keep chaining with API response.\n        Object.assign(this, updated)\n        return updated\n      })\n  }\n\n  /**\n   * Delete itself by calling the delete method of the owning resource.\n   *\n   * @param {Function} callback - error-first callback\n   * @returns {Promise.<Object>}\n   */\n  ['delete'] (callback) {\n    return this[symbols.resource].delete(callback)\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\nimport symbols from '../symbols'\nimport isString from 'lodash-es/isString'\nimport isPlainObject from 'lodash-es/isPlainObject'\n\nconst path = '/properties'\n\n/**\n * Represents a Property entity. Properties are always nested and required\n * to be constructed on Resource/Entity objects (not top level Scopes).\n *\n * @extends Entity\n */\nexport default class Property extends Entity {\n  /**\n   * Return overridden resource factory for Properties. Properties are\n   * sub-resources of Thngs and Products and are not allowed on top level\n   * Scope classes. This factory also override the default Resource's create\n   * and update methods to accept and normalize different types of arguments.\n   *\n   * @static\n   * @return {{property: Function}}\n   */\n  static resourceFactory () {\n    return {\n      property (id) {\n        const thngPath = this instanceof Scope ? this[symbols.path] : ''\n\n        // Creates and returns Resource of type Property.\n        // Override property resource create/update to allow custom value\n        // params. See `normalizeArguments()`.\n        return Object.assign(\n          Resource.factoryFor(Property, thngPath + path).call(this, id),\n          {\n            create (...args) {\n              return Resource.prototype.create\n                .call(this, ...normalizeArguments(...args))\n            },\n            update (...args) {\n              return Resource.prototype.update\n                .call(this, ...normalizeArguments(...args))\n            }\n          }\n        )\n      }\n    }\n  }\n}\n\n/**\n * The API only allows array format for property updates. The SDK relaxed that\n * and allows developers to pass in simple strings, numbers, booleans and objects.\n * It also allows to pass multiple key-value updates in a single object.\n *\n * @param {*} data - Property data.\n * @param {*} rest - Rest of parameters.\n * @return {Array} - Same input format, with first data param updated.\n * @example\n *\n * product.property().update({\n *   on: true,\n *   temp: 26,\n *   custom: ['1', '2']\n * })\n */\nfunction normalizeArguments (data, ...rest) {\n  if (\n    isString(data) ||\n    typeof data === 'number' ||\n    typeof data === 'boolean'\n  ) {\n    // Convert simple property values to API format.\n    data = [{ value: data }]\n  } else if (isPlainObject(data)) {\n    if (data.hasOwnProperty('value')) {\n      // Update single property using object notation.\n      data = [data]\n    } else {\n      // Update multiple properties creating an object for each key-value pair.\n      data = Object.entries(data).map(val => ({\n        key: val[0],\n        value: val[1]\n      }))\n    }\n  }\n\n  return [data, ...rest]\n}\n","/**\n * Get browser's current position from Geolocation API.\n *\n * @return {Promise} - Resolves with current position or rejects with failure\n * explanation.\n */\nexport default function getCurrentPosition () {\n  return new Promise((resolve, reject) => {\n    if (typeof window !== 'undefined' && window.navigator.geolocation) {\n      const geolocationOptions = {\n        maximumAge: 0,\n        timeout: 10000,\n        enableHighAccuracy: true\n      }\n\n      window.navigator.geolocation.getCurrentPosition(\n        resolve,\n        err => reject(err.message),\n        geolocationOptions\n      )\n    } else {\n      reject('Geolocation API not available.')\n    }\n  })\n}\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\nimport settings from '../settings'\nimport symbols from '../symbols'\nimport getCurrentPosition from '../util/getCurrentPosition'\nimport isString from 'lodash-es/isString'\nimport isFunction from 'lodash-es/isFunction'\nimport isUndefined from 'lodash-es/isUndefined'\n\nconst path = '/actions/:type'\n\n/**\n * Represents an Action entity.\n *\n * @extends Entity\n */\nexport default class Action extends Entity {\n  /**\n   * Return overridden resource factory for Actions. Actions require an\n   * action type to be specified before the ID. The action creation is also\n   * different from any other Resource, as it fetches the user location and\n   * pre-populates the action payload with the Resource type.\n   *\n   * @static\n   * @return {{action: Function}}\n   */\n  static resourceFactory () {\n    return {\n      action (actionType, id) {\n        if (!actionType) {\n          throw new TypeError('Action type cannot be empty.')\n        }\n\n        if (!isString(actionType)) {\n          throw new TypeError('Action type must be a name string')\n        }\n\n        const typePath = path.replace(':type', actionType)\n        const thngPath = this instanceof Scope ? this[symbols.path] : ''\n        const context = this\n\n        // Creates and returns Resource of type Action.\n        // Override property resource create to allow custom value params and\n        // fetch the user's geolocation. See `createAction()`.\n        return Object.assign(\n          Resource.factoryFor(Action, thngPath + typePath).call(this, id),\n          {\n            create (...args) {\n              return createAction.call(this, context, actionType, ...args)\n            }\n          }\n        )\n      }\n    }\n  }\n}\n\n/**\n * Create action of given type. Allow empty body and fetch geolocation if\n * setup and available.\n *\n * @param {Scope|Resource|Entity} caller - Where the resource is attached to\n * @param {string} actionType - Type of action\n * @param {*} args - Rest of arguments passed to resource creation\n * @return {Promise}\n */\nfunction createAction (caller, actionType, ...args) {\n  let [data, ...rest] = normalizeArguments(...args)\n  let [options] = rest\n\n  // Auto-fill action payload with resource type and entity id.\n  data = Array.isArray(data)\n    ? data.map(action => fillAction(action, caller, actionType))\n    : data = fillAction(data, caller, actionType)\n\n  const baseCreate = Resource.prototype.create.bind(this)\n  const updatedArgs = () => [data, ...rest]\n\n  if (useGeolocation(options)) {\n    return getCurrentPosition()\n      .then(position => {\n        data = fillActionLocation(data, position)\n        return baseCreate(...updatedArgs())\n      })\n      .catch(err => {\n        console.info(`Unable to get position: ${err}`)\n        return baseCreate(...updatedArgs())\n      })\n  } else {\n    return baseCreate(...updatedArgs())\n  }\n}\n\n/**\n * Add an empty action object if none is provided.\n *\n * @param {*} args - Arguments array.\n * @return {Array} - Same input format, with first data param updated.\n * @example\n *\n * product.action().create()\n * product.action().create(<Action>)\n */\nfunction normalizeArguments (...args) {\n  let firstArg = args[0]\n  if (isUndefined(firstArg) || isFunction(firstArg)) {\n    args.unshift({})\n  }\n  return args\n}\n\n/**\n * Fill action type and entity ID. Resource type takes precedence over given\n * type. Entity ID overrides any pre-defined target ID, if action is created on\n * an Entity instance.\n *\n * @param {Object} data - Action data\n * @param {Scope|Resource|Entity} caller - Where the resource is attached to\n * @param {string} actionType - Resource action type\n * @return {Object} - New action data\n */\nfunction fillAction (data, caller, actionType) {\n  const action = Object.assign({}, data)\n\n  // Fill type from Resource or pre-defined type.\n  action.type = actionType !== 'all' && actionType || data.type || ''\n\n  // Fill in entity ID if called on an entity.\n  const entityIdentifier = getIdentifier(caller)\n  if (entityIdentifier) {\n    action[entityIdentifier] = caller.id\n  }\n\n  return action\n}\n\n/**\n * Actions can be performed on Products, Thngs and Collections and the\n * property on the payload differs based on the target.\n *\n * @param {Scope|Resource|Entity} caller - Where the resource is attached to\n * @return {string}\n */\nfunction getIdentifier (caller) {\n  return caller instanceof Entity\n    ? caller.constructor.name.toLocaleLowerCase()\n    : ''\n}\n\n/**\n * Check if the library should request the browser geolocation. If local\n * option is available, it takes precedence over global setting.\n *\n * @param {Settings|Function} options - If function, it's the callback\n * @return {boolean}\n */\nfunction useGeolocation (options) {\n  return options && !isUndefined(options.geolocation)\n    ? options.geolocation\n    : settings.geolocation\n}\n\n/**\n * Fill action location with coordinates from browser's Geolocation API.\n *\n * @param {Object} data - Action data\n * @param {Object} position - Geolocation API position coordinates\n * @return {Object} - New action data\n */\nfunction fillActionLocation (data, position) {\n  const action = Object.assign({}, data)\n  action.location = {\n    latitude: position.coords.latitude,\n    longitude: position.coords.longitude\n  }\n  action.locationSource = 'sensor'\n  return action\n}\n","/**\n * Return a subclass factory function that mixins the resource factory\n * functions from all the entities provided.\n * This provides a way to extend a Scope class and add a mixin that contains\n * all the resource methods available for that scope.\n *\n * E.g.\n * ```\n *  class Operator extends OperatorAccess(Scope) {}\n * ```\n *\n * See: http://raganwald.com/2015/12/28/mixins-subclass-factories-and-method-advice.html#fn:simplified\n *\n * @param {Array} entities - List of entities to add resources to\n * @return {function(Scope)}\n */\nexport function mixinResources (entities) {\n  const resourceFactories = entities.map(e => e.resourceFactory())\n  const accessResources = Object.assign({}, ...resourceFactories)\n  return Superclass => mixin(accessResources)(class extends Superclass {})\n}\n\n/**\n * Simplified mixin definition. Enough for our use case.\n * See: http://raganwald.com/2015/06/17/functional-mixins.html\n *\n * @param {Object} behaviour - Shared behaviour object literal\n * @param {Boolean} proto - Indicates if mixin should be applied to prototype\n * @return {function(target)}\n */\nexport default function mixin (behaviour, proto = true) {\n  return (target) => {\n    for (let property of Reflect.ownKeys(behaviour)) {\n      Object.defineProperty(\n        proto ? target.prototype : target,\n        property,\n        { value: behaviour[property] }\n      )\n    }\n    return target\n  }\n}\n","import Entity from './Entity'\nimport Property from './Property'\nimport Action from './Action'\nimport Resource from '../resource/Resource'\nimport { mixinResources } from '../util/mixin'\n\nconst path = '/products'\nconst ProductResources = mixinResources([\n  Property,\n  Action\n])\n\n/**\n * Represents a Product entity object.\n *\n * @extends Entity\n */\nexport default class Product extends ProductResources(Entity) {\n  /**\n   * Return simple resource factory for Products.\n   *\n   * @static\n   * @return {{product: Function}}\n   */\n  static resourceFactory () {\n    return {\n      product: Resource.factoryFor(Product, path, ProductResources)\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\nimport settings from '../settings'\nimport symbols from '../symbols'\nimport getCurrentPosition from '../util/getCurrentPosition'\nimport isUndefined from 'lodash-es/isUndefined'\nimport isFunction from 'lodash-es/isFunction'\nimport isPlainObject from 'lodash-es/isPlainObject'\nimport isString from 'lodash-es/isString'\n\nconst path = '/locations'\n\n/**\n * Represents a Location entity. Locations are always nested and required\n * to be constructed on Resource/Entity objects (not top level Scopes).\n *\n * @extends Entity\n */\nexport default class Location extends Entity {\n  /**\n   * Return overridden resource factory for Locations. Locations are\n   * sub-resources of Thngs and are not allowed on top level Scope classes.\n   * This factory also override the default Resource's update method to allow\n   * empty invocations that send the current browser's location as the payload.\n   *\n   * @static\n   * @return {{property: Function}}\n   */\n  static resourceFactory () {\n    return {\n      location () {\n        // Locations don't have single resource endpoint (e.g.: /locations/:id)\n        if (isString(arguments[0])) {\n          throw new TypeError('There is no single resource for Locations')\n        }\n\n        const thngPath = this instanceof Scope ? this[symbols.path] : ''\n\n        // Creates and returns Resource of type Location.\n        // Override property resource update to allow empty updates.\n        // See `updateLocation()`.\n        return Object.assign(\n          Resource.factoryFor(Location, thngPath + path).call(this),\n          {\n            update (...args) {\n              return updateLocation.call(this, ...args)\n            }\n          }\n        )\n      }\n    }\n  }\n}\n\n/**\n * Update locations given an array of new locations. If none is provided\n * it tries to use the current browser location for the update.\n *\n * @param {*} args - List of locations or nothing\n * @return {Promise}\n */\nfunction updateLocation (...args) {\n  let [data, ...rest] = normalizeArguments(...args)\n  const baseUpdate = Resource.prototype.update.bind(this)\n  const updatedArgs = () => [data, ...rest]\n\n  if (useGeolocation(data)) {\n    return getCurrentPosition()\n      .then(position => {\n        data[0] = fillLocation(data[0], position)\n        return baseUpdate(...updatedArgs())\n      })\n      .catch(err => {\n        console.info(`Unable to get position: ${err}`)\n        return baseUpdate(...updatedArgs())\n      })\n  } else {\n    return baseUpdate(...updatedArgs())\n  }\n}\n\n/**\n * Convert simple object to array. Add an empty location array if none is\n * provided.\n *\n * @param {*} args - Arguments array.\n * @return {Array} - Same input format, with first data param updated.\n * @example\n *\n * thng.location().update()\n * thng.location().update([<Location>])\n */\nfunction normalizeArguments (...args) {\n  let firstArg = args[0]\n  if (isPlainObject(firstArg)) {\n    args[0] = [firstArg]\n  } else if (isUndefined(firstArg) || isFunction(firstArg)) {\n    args.unshift([])\n  }\n  return args\n}\n\n/**\n * Use geolocation if no location was provided and global settings allow to use\n * geolocation.\n *\n * @param {Array} data - Data passed to the update (list of locations)\n * @return {boolean}\n */\nfunction useGeolocation (data) {\n  return data.length === 0 && settings.geolocation\n}\n\n/**\n * Fill location coordinates from browser's Geolocation API.\n *\n * @param {Object} data - Location data\n * @param {Object} position - Geolocation API position coordinates\n * @return {Object} - New location data\n */\nfunction fillLocation (data, position) {\n  const location = Object.assign({}, data)\n  location.position = {\n    type: 'Point',\n    coordinates: [position.coords.longitude, position.coords.latitude]\n  }\n  return location\n}\n","import Entity from './Entity'\nimport Property from './Property'\nimport Action from './Action'\nimport Location from './Location'\nimport Resource from '../resource/Resource'\nimport { mixinResources } from '../util/mixin'\n\nconst path = '/thngs'\nconst ThngResources = mixinResources([\n  Property,\n  Action,\n  Location\n])\n\n/**\n * Represents a Thng entity object.\n *\n * @extends Entity\n */\nexport default class Thng extends ThngResources(Entity) {\n  /**\n   * Return simple resource factory for Thngs.\n   *\n   * @static\n   * @return {{product: Function}}\n   */\n  static resourceFactory () {\n    return {\n      thng: Resource.factoryFor(Thng, path, ThngResources)\n    }\n  }\n}\n","import Entity from './Entity'\nimport Thng from './Thng'\nimport Action from './Action'\nimport Resource from '../resource/Resource'\nimport mixin, { mixinResources } from '../util/mixin'\n\nconst path = '/collections'\nconst CollectionResources = mixinResources([\n  Thng,\n  Action\n  // Collection // Read explanation below.\n])\n\n/**\n * Represents a Collection entity object. Collection has nested Collections\n * sub-resources. The workaround for the circular dependency is to only add\n * the Collection resource mixin after the class definition. This is different\n * than baking it in the parent Class Expression mixin\n * (i.e. CollectionResources) as the method is attached to the Collection\n * prototype, rather than the extended Entity class. Though, given the JS\n * prototype chain, there is no difference for the end user.\n *\n * @extends Entity\n */\nexport default class Collection extends CollectionResources(Entity) {\n  /**\n   * Return simple resource factory for Collections.\n   *\n   * @static\n   * @return {{collection: Function}}\n   */\n  static resourceFactory () {\n    return {\n      collection (id) {\n        // Explicitly add Collection resource mixin to nested resource.\n        return Object.assign(\n          Resource.factoryFor(Collection, path, CollectionResources)\n            .call(this, id),\n          Collection.resourceFactory()\n        )\n      }\n    }\n  }\n}\n\n// Explicitly add Collection resource mixin to Collection.\nmixin(Collection.resourceFactory())(Collection)\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport isFunction from 'lodash-es/isFunction'\nimport isUndefined from 'lodash-es/isUndefined'\n\nconst path = '/actions'\n\n/**\n * Represents an ActionType entity. Action types endpoint it weird as it\n * overlaps with the Actions (/actions), so there is a normalization necessary\n * on the read method.\n *\n * @extends Entity\n */\nexport default class ActionType extends Entity {\n  /**\n   * Return overridden resource factory for ActionsTypes. Read method needs to\n   * use a filter as there is no single action type resource endpoint.\n   *\n   * @static\n   * @return {{actionType: Function}}\n   */\n  static resourceFactory () {\n    return {\n      actionType (id) {\n        return Object.assign(\n          Resource.factoryFor(ActionType, path).call(this, id),\n          {\n            read (...args) {\n              return readActionType.call(this, id, ...args)\n            }\n          }\n        )\n      }\n    }\n  }\n}\n\n/**\n * Normalize arguments and response on single read request.\n *\n * @param {String} id - Action type ID\n * @param {*} args - Arguments passed to .read method\n * @return {Promise}\n */\nfunction readActionType (id, ...args) {\n  if (!id) {\n    return Resource.prototype.read.call(this, ...args)\n  } else {\n    const normalizedArgs = normalizeArguments(id)(...args)\n    return new Promise((resolve, reject) => {\n      Resource.prototype.read.call(this, ...normalizedArgs)\n        .then(actionTypes => {\n          if (!actionTypes.length) {\n            // Fake 404\n            reject({\n              status: 404,\n              errors: ['The action type was not found.']\n            })\n          }\n          resolve(actionTypes[0])\n        })\n    })\n  }\n}\n\n/**\n * Curry normalizeArguments with action type id. Converts single resource path\n * (e.g. /actions/_custom) into plural with filter\n * (e.g. /actions?filter=name=_custom).\n *\n * @param {String} id - ID of action type\n * @return {Function} Normalize arguments transformer.\n */\nfunction normalizeArguments (id) {\n  return (...args) => {\n    let options\n    let firstArg = args[0]\n\n    if (isUndefined(firstArg) || isFunction(firstArg)) {\n      options = {}\n      args.unshift(options)\n    } else {\n      options = firstArg\n    }\n\n    options.url = path\n    options.params = Object.assign(\n      { filter: { name: decodeURIComponent(id) } },\n      options.params\n    )\n\n    return args\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport isString from 'lodash-es/isString'\n\nconst path = '/status'\n\nexport default class Status extends Entity {\n  static resourceFactory () {\n    return {\n      status () {\n        if (isString(arguments[0])) {\n          throw new TypeError('There is no single resource for Status')\n        }\n\n        return Resource.factoryFor(Status, path).call(this)\n      }\n    }\n  }\n}\n","import Entity from './Entity'\nimport Status from './Status'\nimport Resource from '../resource/Resource'\nimport { mixinResources } from '../util/mixin'\nimport isString from 'lodash-es/isString'\n\nconst path = '/reactor/script'\nconst ReactorScriptResources = mixinResources([\n  Status\n])\n\n/**\n * Represents a ReactorScript entity object.\n *\n * @extends Entity\n */\nexport default class ReactorScript extends ReactorScriptResources(Entity) {\n  static resourceFactory () {\n    return {\n      reactorScript () {\n        // Reactor scripts don't have single resource endpoint (e.g.: /scripts/:id)\n        if (isString(arguments[0])) {\n          throw new TypeError('There is no single resource for Reactor Scripts')\n        }\n\n        return Resource.factoryFor(ReactorScript, path, ReactorScriptResources)\n          .call(this)\n      }\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\nimport symbols from '../symbols'\n\nconst path = '/reactor/schedules'\n\n/**\n * Represents a ReactorSchedule entity object.\n *\n * @extends Entity\n */\nexport default class ReactorSchedule extends Entity {\n  static resourceFactory () {\n    return {\n      reactorSchedule (id) {\n        const appPath = this instanceof Scope ? this[symbols.path] : ''\n\n        return Resource.factoryFor(ReactorSchedule, appPath + path)\n          .call(this, id)\n      }\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\nimport symbols from '../symbols'\nimport isUndefined from 'lodash-es/isUndefined'\nimport isFunction from 'lodash-es/isFunction'\nimport isString from 'lodash-es/isString'\n\nconst path = '/reactor/logs'\n\n/**\n * Represents a ReactorLog entity object.\n *\n * @extends Entity\n */\nexport default class ReactorLog extends Entity {\n  static resourceFactory () {\n    return {\n      reactorLog (id) {\n        // Reactor logs don't have single resource endpoint (e.g.: /logs/:id)\n        if (isString(arguments[0])) {\n          throw new TypeError('There is no single resource for Reactor Logs')\n        }\n\n        const appPath = this instanceof Scope ? this[symbols.path] : ''\n\n        return Object.assign(\n          Resource.factoryFor(ReactorLog, appPath + path).call(this, id),\n          {\n            create (...args) {\n              return createLogs.call(this, ...args)\n            }\n          }\n        )\n      }\n    }\n  }\n}\n\n/**\n * Use bulk endpoint when creating array of logs.\n *\n * @param {Object} data - Log payload.\n * @param {Array} rest - Rest of arguments.\n * @return {Promise}\n */\nfunction createLogs (data, ...rest) {\n  if (Array.isArray(data)) {\n    let [options] = rest\n    if (isUndefined(options) || isFunction(options)) {\n      options = {}\n      rest.unshift(options)\n    }\n    options.url = `${this.path}/bulk`\n  }\n\n  return Resource.prototype.create.call(this, data, ...rest)\n}\n","import Entity from './Entity'\nimport ReactorScript from './ReactorScript'\nimport ReactorSchedule from './ReactorSchedule'\nimport ReactorLog from './ReactorLog'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\nimport { mixinResources } from '../util/mixin'\n\nconst path = '/applications'\nconst ApplicationResources = mixinResources([\n  ReactorScript,\n  ReactorSchedule,\n  ReactorLog\n])\n\n/**\n * Represents an Application entity.\n *\n * @extends Entity\n */\nexport default class Application extends ApplicationResources(Entity) {\n  /**\n   * Return simple resource factory for Applications.\n   *\n   * @static\n   * @return {{application: Function}}\n   */\n  static resourceFactory () {\n    return {\n      application (id) {\n        // Only allowed on Entities and Resources.\n        if (this instanceof Scope) {\n          throw new Error('Application is not a top-level resource.')\n        }\n\n        return Resource.factoryFor(Application, path, ApplicationResources)\n          .call(this, id)\n      }\n    }\n  }\n}\n","import Entity from './Entity'\nimport Application from './Application'\nimport Resource from '../resource/Resource'\nimport { mixinResources } from '../util/mixin'\n\nconst path = '/projects'\nconst ProjectResources = mixinResources([\n  Application\n])\n\n/**\n * Represents a Project entity object.\n *\n * @extends Entity\n */\nexport default class Project extends ProjectResources(Entity) {\n  /**\n   * Return simple resource factory for Projects.\n   *\n   * @static\n   * @return {{project: Function}}\n   */\n  static resourceFactory () {\n    return {\n      project: Resource.factoryFor(Project, path, ProjectResources)\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\nimport isString from 'lodash-es/isString'\n\nconst path = '/permissions'\n\n/**\n * Represents a Permission entity.\n *\n * @extends Entity\n */\nexport default class Permission extends Entity {\n  /**\n   * Return simple resource factory for Permissions.\n   *\n   * @static\n   * @return {{permission: Function}}\n   */\n  static resourceFactory () {\n    return {\n      permission () {\n        // Permissions don't have single resource endpoint (e.g.: /permissions/:id)\n        if (isString(arguments[0])) {\n          throw new TypeError('There is no single resource for Permissions')\n        }\n\n        // Only allowed on Entities and Resources.\n        if (this instanceof Scope) {\n          throw new Error('Permission is not a top-level resource.')\n        }\n\n        return Resource.factoryFor(Permission, path).call(this)\n      }\n    }\n  }\n}\n","import Entity from './Entity'\nimport Permission from './Permission'\nimport Resource from '../resource/Resource'\nimport { mixinResources } from '../util/mixin'\n\nconst path = '/roles'\nconst RoleResources = mixinResources([\n  Permission\n])\n\n/**\n * Represents a Role entity object.\n *\n * @extends Entity\n */\nexport default class Role extends RoleResources(Entity) {\n  /**\n   * Return simple resource factory for Roles.\n   *\n   * @static\n   * @return {{role: Function}}\n   */\n  static resourceFactory () {\n    return {\n      role: Resource.factoryFor(Role, path, RoleResources)\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\n\nconst path = '/users'\n\n/**\n * Represents a User entity object.\n *\n * @extends Entity\n */\nexport default class User extends Entity {\n  /**\n   * Return simple resource factory for AppUsers.\n   *\n   * @static\n   * @return {{appUser: Function}}\n   */\n  static resourceFactory () {\n    return {\n      user: Resource.factoryFor(User, path)\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport Scope from '../scope/Scope'\n\nconst path = '/tasks'\n\n/**\n * Represents a Task entity.\n *\n * @extends Entity\n */\nexport default class Task extends Entity {\n  /**\n   * Return simple resource factory for Tasks.\n   *\n   * @static\n   * @return {{task: Function}}\n   */\n  static resourceFactory () {\n    return {\n      task (id) {\n        // Only allowed on Entities and Resources.\n        if (this instanceof Scope) {\n          throw new Error('Permission is not a top-level resource.')\n        }\n\n        return Resource.factoryFor(Task, path).call(this, id)\n      }\n    }\n  }\n}\n","import Entity from './Entity'\nimport Task from './Task'\nimport Resource from '../resource/Resource'\nimport { mixinResources } from '../util/mixin'\n\nconst path = '/batches'\nconst BatchResources = mixinResources([\n  Task\n])\n\n/**\n * Represents a Batch entity object.\n *\n * @extends Entity\n */\nexport default class Batch extends BatchResources(Entity) {\n  /**\n   * Return simple resource factory for Batches.\n   *\n   * @static\n   * @return {{batch: Function}}\n   */\n  static resourceFactory () {\n    return {\n      batch: Resource.factoryFor(Batch, path, BatchResources)\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\n\nconst path = '/places'\n\n/**\n * Represents a Place entity object.\n *\n * @extends Entity\n */\nexport default class Place extends Entity {\n  /**\n   * Return simple resource factory for Places.\n   *\n   * @static\n   * @return {{place: Function}}\n   */\n  static resourceFactory () {\n    return {\n      place: Resource.factoryFor(Place, path)\n    }\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\n\nconst path = '/files'\n\n/**\n * Represents a File entity object.\n *\n * @extends Entity\n */\nexport default class File extends Entity {\n  /**\n   * Return simple resource factory for Files.\n   *\n   * @static\n   * @return {{file: Function}}\n   */\n  static resourceFactory () {\n    // TODO enable Node.js File streams and multipart/form-data files/blobs\n\n    return {\n      file: Resource.factoryFor(File, path)\n    }\n  }\n}\n","import Scope from './Scope'\nimport Product from '../entity/Product'\nimport Thng from '../entity/Thng'\nimport Collection from '../entity/Collection'\nimport Action from '../entity/Action'\nimport ActionType from '../entity/ActionType'\nimport Project from '../entity/Project'\nimport Role from '../entity/Role'\nimport User from '../entity/User'\nimport Batch from '../entity/Batch'\nimport Place from '../entity/Place'\nimport File from '../entity/File'\nimport { mixinResources } from '../util/mixin'\nimport symbols from '../symbols'\n\n/**\n * Mixin with all the top-level Operator resources.\n *\n * @mixin\n */\nconst OperatorAccess = mixinResources([\n  Product,          // CRUD\n  Thng,             // CRUD\n  Collection,       // CRUD\n  Action,           // CR\n  ActionType,       // CRUD\n  Project,          // CRUD\n  Role,             // CRUD\n  User,             // R\n  Batch,            // CRUD\n  Place,            // CRUD\n  File              // CRUD\n])\n\n/**\n * Operator is the Scope with highest permissions that can manage the account\n * resources. Should be used with caution in server-side code.\n *\n * @extends Scope\n * @mixes OperatorAccess\n */\nexport default class Operator extends OperatorAccess(Scope) {\n  /**\n   * Creates an instance of Operator.\n   *\n   * @param {string} apiKey - API Key of scope\n   * @param {Object} [data={}] - Optional operator data\n   */\n  constructor (apiKey, data = {}) {\n    super(apiKey, data)\n\n    this[symbols.init] = this[symbols.init]\n      .then(access => {\n        this.id = access.actor.id\n        this[symbols.path] = this._getPath()\n      })\n      .then(this.read.bind(this))\n      .catch(() => {\n        throw new Error('There is no operator with this API Key')\n      })\n  }\n\n  // PRIVATE\n\n  /**\n   * Return operator endpoint.\n   *\n   * @return {string}\n   */\n  _getPath () {\n    return `/operators/${this.id}`\n  }\n}\n","import Scope from './Scope'\nimport Product from '../entity/Product'\nimport Thng from '../entity/Thng'\nimport Collection from '../entity/Collection'\nimport Action from '../entity/Action'\nimport ActionType from '../entity/ActionType'\nimport Role from '../entity/Role'\nimport Place from '../entity/Place'\nimport { mixinResources } from '../util/mixin'\nimport api from '../api'\nimport symbols from '../symbols'\n\n/**\n * Mixin with all the top-level User resources.\n *\n * @mixin\n */\nconst UserAccess = mixinResources([\n  Product,          // CRU\n  Thng,             // CRU\n  Collection,       // CRU\n  Action,           // CR\n  ActionType,       // R\n  Role,             // R\n  Place             // R\n])\n\n/**\n * User is the Scope that represents an application user. It is usually\n * retrieved by authenticating a user in an app, but can also be instantiated\n * explicitly if API Key and details are known (e.g. stored in localStorage).\n *\n * @extends Scope\n * @mixes UserAccess\n */\nexport default class User extends UserAccess(Scope) {\n  /**\n   * Creates an instance of User.\n   *\n   * @param {string} apiKey - API Key of scope\n   * @param {Object} [data={}] - Optional user data\n   */\n  constructor (apiKey, data = {}) {\n    super(apiKey, data)\n\n    this[symbols.init] = this[symbols.init]\n      .then(access => {\n        this.id = access.actor.id\n        this[symbols.path] = this._getPath()\n      })\n      .then(this.read.bind(this))\n      .catch(() => {\n        throw new Error('There is no user with this API Key')\n      })\n  }\n\n  /**\n   * Log current user out of EVRYTHNG platform. I.e. API Key is not longer\n   * valid.\n   *\n   * @param {Function} callback - Error first callback\n   * @returns {Promise.<void>}\n   */\n  async logout (callback) {\n    try {\n      await this._invalidateUser()\n      if (callback) callback(null)\n    } catch (err) {\n      if (callback) callback(err)\n      throw err\n    }\n  }\n\n  // PRIVATE\n\n  /**\n   * Return user endpoint.\n   *\n   * @return {string}\n   */\n  _getPath () {\n    return `/users/${this.id}`\n  }\n\n  /**\n   * Request to invalidate API Key.\n   *\n   * @returns {Promise}\n   * @private\n   */\n  _invalidateUser () {\n    return api({\n      url: '/auth/all/logout',\n      method: 'post',\n      apiKey: this.apiKey\n    })\n  }\n}\n","import Entity from './Entity'\nimport Resource from '../resource/Resource'\nimport api from '../api'\nimport symbols from '../symbols'\nimport isString from 'lodash-es/isString'\n\nconst path = '/auth/evrythng/users'\n\n/**\n * Represents an AppUser access entry object. In the API there is a distinction\n * and different actions available for AppUser access. I.e. they can be validated.\n *\n * @extends Entity\n */\nexport default class UserAccess extends Entity {\n  /**\n   * Return resource factory for AppUsers access.\n   *\n   * @static\n   * @return {{appUser: Function}}\n   */\n  static resourceFactory () {\n    return {\n      userAccess (id) {\n        return Object.assign(\n          Resource.factoryFor(UserAccess, path).call(this, id),\n          {\n            create (...args) {\n              return createAppUser.call(this, ...args)\n            },\n            validate (...args) {\n              return validate.call(this, ...args)\n            }\n          }\n        )\n      }\n    }\n  }\n\n  /**\n   * Convert evrythngUser id into standard ID field.\n   *\n   * @param {Resource} resource - Resource owner of this entity.\n   * @param {Object} [body] Optional entity data\n   */\n  constructor (resource, body = {}) {\n    const copy = Object.assign({}, body)\n    if (copy.evrythngUser) {\n      copy.id = copy.evrythngUser\n      Reflect.deleteProperty(copy, 'evrythngUser')\n    }\n    super(resource, copy)\n  }\n\n  /**\n   * Validate user access using own activation code.\n   *\n   * @return {Promise}\n   */\n  validate () {\n    return validate.call(this, this.activationCode)\n  }\n}\n\n/**\n * Create anonymous app user if anonymous property defined.\n *\n * @param {Array} args - Arguments array.\n * @return {Promise}\n */\nfunction createAppUser (...args) {\n  const [data] = args\n  if (data && data.anonymous) {\n    return createAnonymousUser.call(this, ...args)\n  } else {\n    return Resource.prototype.create.call(this, ...args)\n  }\n}\n\n/**\n * Send a request to the validate endpoint with the given activation code.\n *\n * @param {String} activationCode - Activation code provided on creation.\n * @return {Promise}\n */\nfunction validate (activationCode) {\n  if (!activationCode || !isString(activationCode)) {\n    throw new Error('Activation code must be a string.')\n  }\n\n  if (this.type === 'anonymous') {\n    throw new Error(\"Anonymous users can't be validated.\")\n  }\n\n  let scope = this.scope\n  let path = this.path\n\n  // If called from the entity, the scope is the resource's scope.\n  if (this instanceof Entity) {\n    scope = this[symbols.resource].scope\n    path = `${this[symbols.resource].path}/${this.id}`\n  }\n\n  // Activate  user.\n  return api({\n    url: `${path}/validate`,\n    method: 'post',\n    apiKey: scope.apiKey,\n    data: { activationCode }\n  })\n}\n\n/**\n * Create anonymous user in API and return new scope for that user.\n *\n * @return {Promise}\n */\nfunction createAnonymousUser () {\n  return api({\n    url: this.path,\n    method: 'post',\n    params: {\n      anonymous: true // must be set to create anonymous user\n    },\n    data: {},\n    apiKey: this.scope.apiKey\n  })\n    .then(createUserScope.bind(this))\n}\n\n// TODO Create User Scope\nfunction createUserScope (access) {\n  // return new User({\n  //   id: access.evrythngUser,\n  //   apiKey: access.evrythngApiKey,\n  //   type: 'anonymous'\n  // })\n}\n","import Scope from './Scope'\nimport User from './User'\nimport Product from '../entity/Product'\nimport Action from '../entity/Action'\nimport Place from '../entity/Place'\nimport UserAccess from '../entity/UserAccess'\nimport { mixinResources } from '../util/mixin'\nimport api from '../api'\nimport symbols from '../symbols'\nimport isPlainObject from 'lodash-es/isPlainObject'\n\n/**\n * E-mail and password used to create a user into the platform.\n *\n * @typedef {Object} AccessCredentials\n * @param {string} email - E-mail used on registration\n * @param {string} password - Password defined on registration\n */\n\n/**\n * Mixin with all the top-level Application resources.\n *\n * @mixin\n */\nconst ApplicationAccess = mixinResources([\n  Product,          // R\n  Action,           // C scans\n  UserAccess,       // C\n  Place             // R\n])\n\n/**\n * Application is the Scope with the least permissions. It is meant to be used\n * to create and authenticate application users.\n *\n * @extends Scope\n * @mixes ApplicationAccess\n */\nexport default class Application extends ApplicationAccess(Scope) {\n  /**\n   * Creates an instance of Application.\n   *\n   * @param {string} apiKey - API Key of scope\n   * @param {Object} [data={}] - Optional application data\n   */\n  constructor (apiKey, data = {}) {\n    super(apiKey, data)\n\n    this[symbols.init] = this[symbols.init]\n      .then(access => {\n        this.id = access.actor.id\n        this.project = access.project\n        this[symbols.path] = this._getPath()\n      })\n      .then(this.read.bind(this))\n      .catch(() => {\n        throw new Error('There is no application with this API Key')\n      })\n  }\n\n  /**\n   * Login user using EVRYTHNG credentials and create User scope on success.\n   *\n   * @param {AccessCredentials} credentials - User login credentials\n   * @param {Function} callback - Error first callback\n   * @returns {Promise.<User>} - Authorized User scope\n   */\n  async login (credentials, callback) {\n    try {\n      const user = await this._authenticateUser(credentials)\n      const userScope = new User(user.access.apiKey, user)\n      if (callback) callback(null, userScope)\n      return userScope\n    } catch (err) {\n      if (callback) callback(err)\n      throw err\n    }\n  }\n\n  // PRIVATE\n\n  /**\n   * Return application endpoint, nested within projects.\n   *\n   * @returns {string}\n   * @private\n   */\n  _getPath () {\n    return `/projects/${this.project}/applications/${this.id}`\n  }\n\n  /**\n   * Validate user credentials.\n   *\n   * @param {AccessCredentials} credentials - User login credentials\n   * @returns {Promise.<Object>} - User details with access\n   * @private\n   */\n  _authenticateUser (credentials) {\n    if (!credentials || !isPlainObject(credentials)) {\n      throw new TypeError('Credentials are missing.')\n    }\n\n    return api({\n      url: '/users/login',\n      method: 'post',\n      data: credentials,\n      apiKey: this.apiKey\n    })\n  }\n}\n","import Application from './Application'\nimport Thng from '../entity/Thng'\nimport Collection from '../entity/Collection'\nimport ActionType from '../entity/ActionType'\nimport User from '../entity/User'\nimport ReactorSchedule from '../entity/ReactorSchedule'\nimport ReactorLog from '../entity/ReactorLog'\nimport { mixinResources } from '../util/mixin'\nimport api from '../api'\nimport symbols from '../symbols'\nimport isPlainObject from 'lodash-es/isPlainObject'\n\n/**\n * E-mail and password used to create a user into the platform.\n *\n * @typedef {Object} AccessCredentials\n * @param {string} email - E-mail used on registration\n * @param {string} password - Password defined on registration\n */\n\n/**\n * Mixin with all the top-level Application resources.\n *\n * @mixin\n */\nconst ApplicationAccess = mixinResources([\n  Thng,             // CRUD\n  Collection,       // CRUD\n  ActionType,       // CR\n  User,             // R\n  ReactorSchedule,  // C\n  ReactorLog        // C\n\n  // From Application:\n  // Product        // CRUD\n  // Place          // CRUD\n  // Action         // CR\n])\n\n/**\n * Application is the Scope with the least permissions. It is meant to be used\n * to create and authenticate application users.\n *\n * @extends Scope\n * @mixes ApplicationAccess\n */\nexport default class TrustedApplication extends ApplicationAccess(Application) {\n  /**\n   * Creates an instance of Application.\n   *\n   * @param {string} apiKey - API Key of scope\n   * @param {Object} [data={}] - Optional application data\n   */\n  constructor (apiKey, data = {}) {\n    super(apiKey, data)\n\n    this[symbols.init] = this[symbols.init]\n      .then(access => {\n        this.id = access.actor.id\n        this.project = access.project\n        this[symbols.path] = this._getPath()\n      })\n      .then(this.read.bind(this))\n      .catch(() => {\n        throw new Error('There is no application with this API Key')\n      })\n  }\n\n  /**\n   * Login user using EVRYTHNG credentials and create User scope on success.\n   *\n   * @param {AccessCredentials} credentials - User login credentials\n   * @param {Function} callback - Error first callback\n   * @returns {Promise.<User>} - Authorized User scope\n   */\n  async login (credentials, callback) {\n    try {\n      const user = await this._authenticateUser(credentials)\n      const userScope = new User(user.access.apiKey, user)\n      if (callback) callback(null, userScope)\n      return userScope\n    } catch (err) {\n      if (callback) callback(err)\n      throw err\n    }\n  }\n\n  // PRIVATE\n\n  /**\n   * Return application endpoint, nested within projects.\n   *\n   * @returns {string}\n   * @private\n   */\n  _getPath () {\n    return `/projects/${this.project}/applications/${this.id}`\n  }\n\n  /**\n   * Validate user credentials.\n   *\n   * @param {AccessCredentials} credentials - User login credentials\n   * @returns {Promise.<Object>} - User details with access\n   * @private\n   */\n  _authenticateUser (credentials) {\n    if (!credentials || !isPlainObject(credentials)) {\n      throw new TypeError('Credentials are missing.')\n    }\n\n    return api({\n      url: '/users/login',\n      method: 'post',\n      data: credentials,\n      apiKey: this.apiKey\n    })\n  }\n}\n","import Scope from './Scope'\nimport Property from '../entity/Property'\nimport Action from '../entity/Action'\n// import Location from '../entity/Location'\nimport symbols from '../symbols'\nimport { mixinResources } from '../util/mixin'\n\n/**\n * Mixin with all the top-level Application resources.\n *\n * @mixin\n */\nconst DeviceAccess = mixinResources([\n  Property,          // CRUD\n  Action             // CRUD\n  // Location           // CRUD\n])\n\n/**\n * Device is the Scope that represents an active/smart Thng. It can only\n * essentially update itself and its nested resources (e.g. Property, Location,\n * Action).\n *\n * @extends Scope\n */\nexport default class Device extends DeviceAccess(Scope) {\n  /**\n   * Creates an instance of Device.\n   *\n   * @param {string} apiKey - API Key of scope\n   * @param {Object} [data={}] - Optional device data\n   */\n  constructor (apiKey, data = {}) {\n    super(apiKey, data)\n\n    this[symbols.init] = this[symbols.init]\n      .catch(() => {\n        throw new Error('There is no thng with this API Key')\n      })\n      .then(access => {\n        this.id = access.actor.id\n        this[symbols.path] = this._getPath()\n      })\n      .then(this.read.bind(this))\n  }\n\n  // PRIVATE\n\n  /**\n   * Return device thng endpoint.\n   *\n   * @return {string}\n   */\n  _getPath () {\n    return `/thngs/${this.id}`\n  }\n}\n","import Product from './entity/Product'\nimport Thng from './entity/Thng'\nimport Collection from './entity/Collection'\nimport Property from './entity/Property'\nimport Action from './entity/Action'\nimport ActionType from './entity/ActionType'\nimport Application from './entity/Application'\nimport User from './entity/User'\nimport Batch from './entity/Batch'\nimport Location from './entity/Location'\nimport Permission from './entity/Permission'\nimport Project from './entity/Project'\nimport Role from './entity/Role'\nimport Task from './entity/Task'\n\nexport default {\n  Product,\n  Thng,\n  Collection,\n  Property,\n  Action,\n  ActionType,\n  Application,\n  User,\n  Batch,\n  Location,\n  Permission,\n  Project,\n  Role,\n  Task\n}\n","export const version = '5.0.0'\n\n// Globals\nexport { default as settings } from './settings'\nexport { default as setup } from './setup'\nexport { default as api } from './api'\n\n// TODO add method to install plugins\n\n// Scopes\nexport { default as Operator } from './scope/Operator'\nexport { default as Application } from './scope/Application'\nexport { default as TrustedApplication } from './scope/TrustedApplication'\nexport { default as User } from './scope/User'\nexport { default as Device } from './scope/Device'\n\n// Namespaces for: Entities and Symbols\nexport { default as Entity } from './entities'\nexport { default as Symbol } from './symbols'\n\n// Extensible internal modules\nexport { default as _Resource } from './resource/Resource'\nexport { default as _Entity } from './entity/Entity'\nexport { default as _Scope } from './scope/Scope'\n"],"names":["defaultSettings","settings","Object","assign","Symbol","objectProto","hasOwnProperty","symToStringTag","nativeObjectToString","setup","customSettings","isPlainObject","TypeError","SPECIALS","SPECIALS_REGEXP","RegExp","join","SPECIALS_ESCAPE","buildParams","params","useEncoding","entries","map","buildParam","encode","uriEncoder","key","value","encodeURIComponent","escapeSpecials","replace","buildUrl","options","url","apiUrl","api","customOptions","callback","initialOptions","mergeInitialOptions","applyRequestInterceptors","then","makeFetch","handleResponse","applyResponseInterceptors","success","catch","failure","method","headers","authorization","apiKey","data","body","JSON","stringify","deleteProperty","cancelled","cancel","intercepted","Promise","resolve","Array","isArray","interceptors","filter","interceptor","isFunction","request","forEach","prevOptions","finalOptions","reject","req","fetch","timeout","race","response","res","fullResponse","status","json","ok","err","Scope","isString","Error","symbols","init","opts","path","_request","parseLinkHeader","header","links","length","parts","split","i","section","trim","name","Resource","factoryFor","type","MixinNestedResources","id","parentPath","parentScope","newPath","scope","Entity","resource","XResource","prototype","entity","deserialize","bind","indexOf","newResource","EntityType","_linkRequest","result","next","requestOptions","userOptions","serialize","deserialized","linkHeader","get","decodeURIComponent","reduce","ret","k","v","update","updated","delete","Property","resourceFactory","thngPath","call","args","create","normalizeArguments","rest","val","getCurrentPosition","window","navigator","geolocation","geolocationOptions","message","Action","actionType","typePath","context","createAction","caller","action","fillAction","baseCreate","updatedArgs","useGeolocation","position","fillActionLocation","info","firstArg","isUndefined","unshift","entityIdentifier","getIdentifier","constructor","toLocaleLowerCase","location","coords","latitude","longitude","locationSource","mixinResources","entities","resourceFactories","e","accessResources","Superclass","mixin","behaviour","proto","target","property","Reflect","ownKeys","defineProperty","ProductResources","Product","Location","arguments","updateLocation","baseUpdate","fillLocation","ThngResources","Thng","CollectionResources","Collection","ActionType","readActionType","read","normalizedArgs","actionTypes","Status","ReactorScriptResources","ReactorScript","ReactorSchedule","appPath","ReactorLog","createLogs","ApplicationResources","Application","ProjectResources","Project","Permission","RoleResources","Role","User","Task","BatchResources","Batch","Place","File","OperatorAccess","Operator","access","actor","_getPath","UserAccess","logout","_invalidateUser","createAppUser","validate","copy","evrythngUser","activationCode","anonymous","createAnonymousUser","createUserScope","ApplicationAccess","project","login","credentials","user","_authenticateUser","userScope","TrustedApplication","DeviceAccess","Device","version"],"mappings":"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"}